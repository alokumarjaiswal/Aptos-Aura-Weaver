{"version":3,"file":"static/js/main.c83efcd0.js","mappings":"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","sources":["WalletProvider.tsx","contexts/AppContext.tsx","components/Header.tsx","components/LandingPage.tsx","components/WalletPage.tsx","utils/aptosExplorer.ts","utils/networkUtils.ts","components/AuraPage.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils/validation.ts","../webpack/bootstrap","../webpack/runtime/amd define","../webpack/runtime/amd options","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["import React from 'react';\r\nimport { AptosWalletAdapterProvider } from '@aptos-labs/wallet-adapter-react';\r\nimport { Network } from '@aptos-labs/ts-sdk';\r\n\r\nexport const WalletProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const network = (process.env.REACT_APP_APTOS_NETWORK as Network) || Network.DEVNET;\r\n  const apiKeys = process.env.REACT_APP_PINATA_API_KEY && process.env.REACT_APP_PINATA_SECRET_KEY\r\n    ? {\r\n        [network]: {\r\n          pinata: {\r\n            apiKey: process.env.REACT_APP_PINATA_API_KEY,\r\n            secretKey: process.env.REACT_APP_PINATA_SECRET_KEY\r\n          }\r\n        }\r\n      }\r\n    : undefined;\r\n\r\n  return (\r\n    <AptosWalletAdapterProvider\r\n      autoConnect={true}\r\n      dappConfig={{\r\n        network,\r\n        aptosApiKeys: apiKeys as any // Type assertion for wallet adapter compatibility\r\n      }}\r\n      optInWallets={[\"Petra\"]} // Explicitly include Petra\r\n      onError={(error) => {\r\n        console.error('Wallet adapter error:', error);\r\n      }}\r\n    >\r\n      {children}\r\n    </AptosWalletAdapterProvider>\r\n  );\r\n};\r\n","import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\nexport interface AppState {\r\n  moodSeed: string;\r\n  transactionCount: number;\r\n  imageData: string;\r\n  loading: boolean;\r\n  lastTransactionHash?: string;\r\n}\r\n\r\nexport interface AppContextType {\r\n  state: AppState;\r\n  setMoodSeed: (moodSeed: string) => void;\r\n  setTransactionCount: (count: number) => void;\r\n  setImageData: (imageData: string) => void;\r\n  setLoading: (loading: boolean) => void;\r\n  setTransactionHash: (hash: string) => void;\r\n  resetState: () => void;\r\n}\r\n\r\nconst AppContext = createContext<AppContextType | undefined>(undefined);\r\n\r\nconst initialState: AppState = {\r\n  moodSeed: '',\r\n  transactionCount: 0,\r\n  imageData: '',\r\n  loading: false,\r\n  lastTransactionHash: undefined,\r\n};\r\n\r\nexport const AppProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [state, setState] = useState<AppState>(initialState);\r\n\r\n  const setMoodSeed = (moodSeed: string) => {\r\n    setState(prev => ({ ...prev, moodSeed, lastTransactionHash: undefined }));\r\n  };\r\n\r\n  const setTransactionCount = (count: number) => {\r\n    setState(prev => ({ ...prev, transactionCount: count, lastTransactionHash: undefined }));\r\n  };\r\n\r\n  const setImageData = (imageData: string) => {\r\n    setState(prev => ({ ...prev, imageData }));\r\n  };\r\n\r\n  const setLoading = (loading: boolean) => {\r\n    setState(prev => ({ ...prev, loading }));\r\n  };\r\n\r\n  const setTransactionHash = (hash: string) => {\r\n    setState(prev => ({ ...prev, lastTransactionHash: hash }));\r\n  };\r\n\r\n  const resetState = () => {\r\n    setState(initialState);\r\n  };\r\n\r\n  const value: AppContextType = {\r\n    state,\r\n    setMoodSeed,\r\n    setTransactionCount,\r\n    setImageData,\r\n    setLoading,\r\n    setTransactionHash,\r\n    resetState,\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppContext = () => {\r\n  const context = useContext(AppContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAppContext must be used within an AppProvider');\r\n  }\r\n  return context;\r\n};","import React from 'react';\r\n\r\ninterface HeaderProps {\r\n  showBackButton?: boolean;\r\n  onBackClick?: () => void;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ showBackButton = false, onBackClick }) => {\r\n  return (\r\n    <header className=\"app-header\">\r\n      <div className=\"header-content\">\r\n        <div className=\"header-text\">\r\n          <h1 className=\"app-title\">APTOS AURA WEAVER</h1>\r\n          <p className=\"app-subtitle\">Generate your personalized aura NFT based on your on-chain activity</p>\r\n        </div>\r\n        <div className=\"header-actions\">\r\n          {showBackButton && (\r\n            <button\r\n              onClick={onBackClick}\r\n              className=\"btn btn-secondary back-button\"\r\n              title=\"Go back\"\r\n            >\r\n              ← Back\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { useWallet } from '@aptos-labs/wallet-adapter-react';\r\nimport Header from '../components/Header';\r\nimport pxArtImage from '../pxArt.png';\r\nimport { isPetraWalletInstalled, redirectToPetraInstall } from '../utils/validation';\r\n\r\nconst LandingPage: React.FC = () => {\r\n  const { connect } = useWallet();\r\n\r\n  const handleConnect = async () => {\r\n    // Check if Petra wallet is installed first\r\n    if (!isPetraWalletInstalled()) {\r\n      alert('Petra wallet not detected. Redirecting to installation page...');\r\n      redirectToPetraInstall();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await connect('Petra');\r\n      // Navigation will be handled by wallet state change in App.tsx\r\n    } catch (error: any) {\r\n      console.error('Wallet connection error:', error);\r\n      \r\n      const errorMsg = error?.message || error?.toString() || '';\r\n      \r\n      if (errorMsg.includes('No provider') || errorMsg.includes('not found')) {\r\n        alert('Petra wallet not found. Please install Petra wallet extension.');\r\n        redirectToPetraInstall();\r\n      } else if (errorMsg.includes('rejected') || errorMsg.includes('denied') || errorMsg.includes('cancelled')) {\r\n        alert('Connection cancelled. Please try again and approve the connection.');\r\n      } else if (errorMsg.includes('locked') || errorMsg.includes('unlock')) {\r\n        alert('Petra wallet is locked. Please unlock your wallet and try again.');\r\n      } else if (errorMsg.includes('network') || errorMsg.includes('connection')) {\r\n        alert('Network error. Please check your internet connection and try again.');\r\n      } else if (errorMsg.includes('timeout') || errorMsg.includes('TIMEOUT')) {\r\n        alert('Connection timed out. Please try again.');\r\n      } else {\r\n        alert(`Failed to connect wallet: ${errorMsg}. Please make sure Petra wallet is unlocked and try again.`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"app-content\">\r\n        <Header />\r\n\r\n        <main className=\"main-content\">\r\n          <div className=\"landing-section\">\r\n            <div className=\"pixel-art-container\">\r\n              <img src={pxArtImage} alt=\"Pixel Art Character\" className=\"pixel-art-image\" draggable=\"false\" />\r\n            </div>\r\n\r\n            <div className=\"landing-content\">\r\n              <button\r\n                onClick={handleConnect}\r\n                className=\"btn btn-primary btn-connect-wallet\"\r\n              >\r\n                <svg width=\"20\" height=\"19\" viewBox=\"0 0 35 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"petra-svg\">\r\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 19.4667C0 8.94232 8.53168 0.410645 19.056 0.410645C33.0023 0.410645 39.6271 17.5875 29.2927 26.9522L24.4311 31.3576L15.654 23.3559L27.2291 12.2877H11.8771V32.1818H0V19.4667Z\" fill=\"currentColor\"/>\r\n                </svg>\r\n                Connect Petra Wallet\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useWallet } from '@aptos-labs/wallet-adapter-react';\r\nimport Header from '../components/Header';\r\nimport { useAppContext } from '../contexts/AppContext';\r\n\r\nconst WalletPage: React.FC = () => {\r\n  const { account, disconnect } = useWallet();\r\n  const navigate = useNavigate();\r\n  const { state, setMoodSeed, setTransactionCount, setLoading } = useAppContext();\r\n  const [localLoading, setLocalLoading] = useState(false);\r\n  const [copied, setCopied] = useState(false);\r\n  const [autoFetched, setAutoFetched] = useState(false);\r\n\r\n  const checkNetworkCompatibility = async (): Promise<boolean> => {\r\n    try {\r\n      const expectedNetwork = (process.env.REACT_APP_APTOS_NETWORK as string) || 'devnet';\r\n      \r\n      // Check if wallet network matches expected network\r\n      if ((window as any).aptos?.network) {\r\n        const walletNetwork = await (window as any).aptos.network();\r\n        const actualNetwork = walletNetwork?.name || walletNetwork;\r\n        \r\n        if (actualNetwork && !actualNetwork.toLowerCase().includes(expectedNetwork.toLowerCase())) {\r\n          alert(`Network Warning: Please switch your wallet to ${expectedNetwork.toUpperCase()} network. Currently connected to: ${actualNetwork}`);\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    } catch (error) {\r\n      console.warn('Network compatibility check failed:', error);\r\n      return true; // Continue if check fails\r\n    }\r\n  };\r\n\r\n  const fetchUserData = useCallback(async () => {\r\n    if (!account?.address) return;\r\n\r\n    // Check network compatibility before fetching data\r\n    const networkOk = await checkNetworkCompatibility();\r\n    if (!networkOk) {\r\n      return; // Stop if network mismatch\r\n    }\r\n\r\n    setLocalLoading(true);\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Import Aptos SDK dynamically\r\n      const { Aptos, AptosConfig, Network } = await import('@aptos-labs/ts-sdk');\r\n\r\n      const network = (process.env.REACT_APP_APTOS_NETWORK as any) || Network.DEVNET;\r\n      const nodeUrl = process.env.REACT_APP_APTOS_NODE_URL || undefined;\r\n\r\n      const aptosConfig = new AptosConfig({\r\n        network,\r\n        fullnode: nodeUrl\r\n      });\r\n      const aptos = new Aptos(aptosConfig);\r\n\r\n      const addressString = account.address.toString();\r\n      const accountData = await aptos.getAccountInfo({ accountAddress: addressString });\r\n\r\n      if (!accountData || typeof accountData.sequence_number === 'undefined') {\r\n        throw new Error('Invalid response from Aptos node');\r\n      }\r\n\r\n      const txCount = parseInt(accountData.sequence_number);\r\n      setTransactionCount(txCount);\r\n\r\n      console.log(`Data fetched: Found ${txCount} transactions`);\r\n\r\n      if (txCount === 0) {\r\n        alert('Your account has no transactions yet. You can still create an aura!');\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error fetching user data:', error);\r\n      \r\n      const errorMsg = error?.message || error?.toString() || '';\r\n\r\n      if (errorMsg.includes('not found') || errorMsg.includes('Invalid response')) {\r\n        setTransactionCount(0);\r\n        alert('Account not found on Aptos network. This is normal for new accounts. Using transaction count: 0');\r\n      } else if (errorMsg.includes('network') || errorMsg.includes('fetch') || !navigator.onLine) {\r\n        alert('Network error. Please check your internet connection and try again.');\r\n      } else if (errorMsg.includes('timeout') || errorMsg.includes('TIMEOUT')) {\r\n        alert('Request timed out. The network may be slow. Please try again.');\r\n      } else if (errorMsg.includes('rate limit') || errorMsg.includes('429')) {\r\n        alert('Too many requests. Please wait a moment and try again.');\r\n      } else if (errorMsg.includes('CORS') || errorMsg.includes('cors')) {\r\n        alert('Connection blocked by browser security. Please try refreshing the page.');\r\n      } else if (errorMsg.includes('Unauthorized') || errorMsg.includes('401')) {\r\n        alert('Authorization error. Please reconnect your wallet.');\r\n      } else {\r\n        alert(`Unable to fetch account data: ${errorMsg}. Using demo values for now.`);\r\n        setTransactionCount(Math.floor(Math.random() * 50) + 5);\r\n      }\r\n    } finally {\r\n      setLocalLoading(false);\r\n      setLoading(false);\r\n    }\r\n  }, [account, setTransactionCount, setLoading]);\r\n\r\n  // Auto-fetch transaction data when wallet is connected\r\n  useEffect(() => {\r\n    if (account?.address && !autoFetched && state.transactionCount === 0 && !localLoading) {\r\n      console.log('Auto-fetching transaction data for connected wallet...');\r\n      setAutoFetched(true);\r\n      fetchUserData();\r\n    }\r\n  }, [account?.address, autoFetched, state.transactionCount, localLoading, fetchUserData]);\r\n\r\n  // Reset auto-fetch state when wallet disconnects\r\n  useEffect(() => {\r\n    if (!account?.address) {\r\n      setAutoFetched(false);\r\n    }\r\n  }, [account?.address]);\r\n\r\n  const handleContinue = () => {\r\n    if (state.moodSeed.trim()) {\r\n      navigate('/aura');\r\n    } else {\r\n      alert('Please enter a mood seed to continue.');\r\n    }\r\n  };\r\n\r\n  const handleCopyAddress = async () => {\r\n    if (account?.address) {\r\n      try {\r\n        await navigator.clipboard.writeText(account.address.toString());\r\n        setCopied(true);\r\n        setTimeout(() => setCopied(false), 2000);\r\n      } catch (error) {\r\n        console.error('Failed to copy address:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"app-content\">\r\n        <Header />\r\n        \r\n        <main className=\"main-content\">\r\n          <div className=\"wallet-section\">\r\n            <div className=\"wallet-main\">\r\n              <div className=\"wallet-header-info\">\r\n                <div className=\"wallet-address-display\">\r\n                  <span \r\n                    className={`address-value ${copied ? 'copied' : ''}`} \r\n                    onClick={handleCopyAddress}\r\n                    style={{ cursor: 'pointer' }}\r\n                  >\r\n                    {account?.address?.toString()}\r\n                    <svg className=\"copy-icon\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                      <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\r\n                      <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>\r\n                    </svg>\r\n                    <svg className={`checkmark-icon ${copied ? 'visible' : ''}`} width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                      <polyline points=\"20,6 9,17 4,12\"></polyline>\r\n                    </svg>\r\n                  </span>\r\n                </div>\r\n                <button\r\n                  onClick={disconnect}\r\n                  className=\"disconnect-btn\"\r\n                  title=\"Disconnect Wallet\"\r\n                >\r\n                  <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"mood-input-section\">\r\n                <div className=\"mood-input-container\">\r\n                  <label className=\"mood-label\">Your Mood Seed</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={state.moodSeed}\r\n                    onChange={(e) => setMoodSeed(e.target.value)}\r\n                    onFocus={(e) => e.target.select()}\r\n                    placeholder=\"\"\r\n                    className=\"mood-input\"\r\n                    spellCheck={false}\r\n                    autoComplete=\"off\"\r\n                    autoCorrect=\"off\"\r\n                    autoCapitalize=\"off\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"data-fetch-section\">\r\n                  <button\r\n                    onClick={() => {\r\n                      setAutoFetched(false);\r\n                      fetchUserData();\r\n                    }}\r\n                    disabled={localLoading}\r\n                    className=\"sync-btn\"\r\n                    title=\"Refresh transaction data\"\r\n                  >\r\n                    <svg className={`sync-icon ${localLoading ? 'rotating' : ''}`} width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                      <polyline points=\"23,4 23,10 17,10\"></polyline>\r\n                      <polyline points=\"1,20 1,14 7,14\"></polyline>\r\n                      <path d=\"M20.49,9A9,9,0,0,0,5.64,5.64L1,10m22,4l-4.64,4.36A9,9,0,0,1,3.51,15\"></path>\r\n                    </svg>\r\n                  </button>\r\n                  <span className=\"tx-count\">Tx: {state.transactionCount}</span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"generate-section\">\r\n                <button\r\n                  onClick={handleContinue}\r\n                  disabled={!state.moodSeed.trim() || state.transactionCount < 0}\r\n                  className=\"btn btn-primary btn-connect-wallet\"\r\n                >\r\n                  <span className=\"generate-text\">Generate My Aura</span>\r\n                  <div className=\"generate-glow\"></div>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletPage;","/**\r\n * Utility functions for Aptos blockchain explorer integration\r\n */\r\n\r\n/**\r\n * Generate the appropriate explorer URL based on network configuration\r\n */\r\nexport const getAptosExplorerUrl = (transactionHash: string): string => {\r\n  // Get network from environment variables\r\n  const network = process.env.REACT_APP_APTOS_NETWORK || 'devnet';\r\n  \r\n  // Generate the appropriate explorer URL based on network\r\n  switch (network.toLowerCase()) {\r\n    case 'mainnet':\r\n      return `https://explorer.aptoslabs.com/txn/${transactionHash}?network=mainnet`;\r\n    case 'testnet':\r\n      return `https://explorer.aptoslabs.com/txn/${transactionHash}?network=testnet`;\r\n    case 'devnet':\r\n    default:\r\n      return `https://explorer.aptoslabs.com/txn/${transactionHash}?network=devnet`;\r\n  }\r\n};\r\n\r\n/**\r\n * Open the transaction in the Aptos explorer in a new tab\r\n */\r\nexport const openTransactionInExplorer = (transactionHash: string): void => {\r\n  const explorerUrl = getAptosExplorerUrl(transactionHash);\r\n  window.open(explorerUrl, '_blank', 'noopener,noreferrer');\r\n};\r\n\r\n/**\r\n * Get the network name for display purposes\r\n */\r\nexport const getNetworkDisplayName = (): string => {\r\n  const network = process.env.REACT_APP_APTOS_NETWORK || 'devnet';\r\n  \r\n  switch (network.toLowerCase()) {\r\n    case 'mainnet':\r\n      return 'Mainnet';\r\n    case 'testnet':\r\n      return 'Testnet';\r\n    case 'devnet':\r\n    default:\r\n      return 'Devnet';\r\n  }\r\n};","/**\r\n * Network utilities for Aptos blockchain operations\r\n */\r\n\r\nimport { ValidationResult } from '../types/app';\r\n\r\nexport interface NetworkInfo {\r\n  name: string;\r\n  chainId?: string;\r\n  url?: string;\r\n}\r\n\r\nexport interface NetworkCheckResult {\r\n  isCompatible: boolean;\r\n  expected: string;\r\n  actual: string | null;\r\n  warning?: string;\r\n}\r\n\r\n/**\r\n * Get the expected network from environment configuration\r\n */\r\nexport const getExpectedNetwork = (): string => {\r\n  return (process.env.REACT_APP_APTOS_NETWORK as string) || 'devnet';\r\n};\r\n\r\n/**\r\n * Get current network from wallet\r\n */\r\nexport const getCurrentNetwork = async (): Promise<string | null> => {\r\n  try {\r\n    if ((window as any).aptos?.network) {\r\n      const networkInfo = await (window as any).aptos.network();\r\n      return networkInfo?.name || networkInfo || null;\r\n    }\r\n    return null;\r\n  } catch (error) {\r\n    console.warn('Failed to get current network:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Check if current network matches expected network\r\n */\r\nexport const checkNetworkCompatibility = async (): Promise<NetworkCheckResult> => {\r\n  const expected = getExpectedNetwork();\r\n  const actual = await getCurrentNetwork();\r\n  \r\n  if (!actual) {\r\n    return {\r\n      isCompatible: true, // Assume compatible if we can't detect\r\n      expected,\r\n      actual,\r\n      warning: 'Could not detect wallet network'\r\n    };\r\n  }\r\n  \r\n  const isCompatible = actual.toLowerCase().includes(expected.toLowerCase()) ||\r\n                      expected.toLowerCase().includes(actual.toLowerCase());\r\n  \r\n  return {\r\n    isCompatible,\r\n    expected,\r\n    actual,\r\n    warning: isCompatible ? undefined : `Please switch to ${expected.toUpperCase()} network`\r\n  };\r\n};\r\n\r\n/**\r\n * Validate network connection and compatibility\r\n */\r\nexport const validateNetworkConnection = async (): Promise<ValidationResult> => {\r\n  // Check internet connectivity\r\n  if (!navigator.onLine) {\r\n    return {\r\n      isValid: false,\r\n      error: 'No internet connection. Please check your network connection.'\r\n    };\r\n  }\r\n  \r\n  try {\r\n    const networkCheck = await checkNetworkCompatibility();\r\n    \r\n    if (!networkCheck.isCompatible) {\r\n      return {\r\n        isValid: false,\r\n        error: `Network mismatch: Expected ${networkCheck.expected}, but wallet is on ${networkCheck.actual}. ${networkCheck.warning || ''}`\r\n      };\r\n    }\r\n    \r\n    return { isValid: true };\r\n  } catch (error) {\r\n    return {\r\n      isValid: false,\r\n      error: `Network validation failed: ${error instanceof Error ? error.message : 'Unknown error'}`\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get user-friendly network display names\r\n */\r\nexport const getNetworkDisplayName = (network?: string): string => {\r\n  const networkName = network || getExpectedNetwork();\r\n  \r\n  switch (networkName.toLowerCase()) {\r\n    case 'devnet':\r\n      return 'Devnet';\r\n    case 'testnet':\r\n      return 'Testnet';\r\n    case 'mainnet':\r\n      return 'Mainnet';\r\n    default:\r\n      return networkName.charAt(0).toUpperCase() + networkName.slice(1);\r\n  }\r\n};\r\n\r\n/**\r\n * Check if we're on a test network (devnet/testnet)\r\n */\r\nexport const isTestNetwork = (network?: string): boolean => {\r\n  const networkName = (network || getExpectedNetwork()).toLowerCase();\r\n  return networkName === 'devnet' || networkName === 'testnet';\r\n};\r\n\r\n/**\r\n * Get appropriate explorer URL for current network\r\n */\r\nexport const getExplorerUrl = (network?: string): string => {\r\n  const networkName = (network || getExpectedNetwork()).toLowerCase();\r\n  \r\n  switch (networkName) {\r\n    case 'mainnet':\r\n      return 'https://explorer.aptoslabs.com';\r\n    case 'testnet':\r\n      return 'https://explorer.aptoslabs.com/?network=testnet';\r\n    case 'devnet':\r\n    default:\r\n      return 'https://explorer.aptoslabs.com/?network=devnet';\r\n  }\r\n};\r\n\r\n/**\r\n * Monitor network changes and notify callback\r\n */\r\nexport const monitorNetworkChanges = (\r\n  callback: (networkInfo: NetworkCheckResult) => void,\r\n  intervalMs: number = 5000\r\n): () => void => {\r\n  let currentNetwork: string | null = null;\r\n  \r\n  const checkNetwork = async () => {\r\n    try {\r\n      const networkCheck = await checkNetworkCompatibility();\r\n      \r\n      if (networkCheck.actual !== currentNetwork) {\r\n        currentNetwork = networkCheck.actual;\r\n        callback(networkCheck);\r\n      }\r\n    } catch (error) {\r\n      console.warn('Network monitoring error:', error);\r\n    }\r\n  };\r\n  \r\n  // Initial check\r\n  checkNetwork();\r\n  \r\n  // Set up interval\r\n  const intervalId = setInterval(checkNetwork, intervalMs);\r\n  \r\n  // Return cleanup function\r\n  return () => clearInterval(intervalId);\r\n};","import React, { Suspense, lazy, useCallback } from 'react';\r\nimport { useWallet } from '@aptos-labs/wallet-adapter-react';\r\nimport Header from '../components/Header';\r\nimport { useAppContext } from '../contexts/AppContext';\r\nimport { openTransactionInExplorer, getNetworkDisplayName } from '../utils/aptosExplorer';\r\nimport { checkNetworkCompatibility } from '../utils/networkUtils';\r\n\r\n// Lazy load the heavy AuraGenerator component\r\nconst AuraGenerator = lazy(() => import('../AuraGenerator'));\r\n\r\nconst AuraPage: React.FC = () => {\r\n  const { account, signAndSubmitTransaction } = useWallet();\r\n  const { state, setImageData, setLoading, setTransactionHash } = useAppContext();\r\n\r\n  // Memoize the image callback to prevent unnecessary re-renders\r\n  const handleImageGenerated = useCallback((imageData: string) => {\r\n    setImageData(imageData);\r\n    // Clear any previous transaction hash when a new aura is generated\r\n    setTransactionHash('');\r\n  }, [setImageData, setTransactionHash]);\r\n\r\n  const mapTransactionError = (error: any): { message: string; type: 'error' | 'warning' | 'info' } => {\r\n    const errorMsg = error?.message || error?.toString() || '';\r\n    const errorCode = error?.code || error?.status;\r\n    \r\n    // Aptos-specific transaction errors\r\n    if (errorMsg.includes('INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE') || errorMsg.includes('insufficient funds')) {\r\n      return {\r\n        message: 'Insufficient APT balance for gas fees. Please add more APT to your wallet.',\r\n        type: 'error'\r\n      };\r\n    }\r\n    \r\n    if (errorMsg.includes('SEQUENCE_NUMBER_TOO_OLD') || errorMsg.includes('sequence number')) {\r\n      return {\r\n        message: 'Transaction sequence error. Please refresh your wallet and try again.',\r\n        type: 'warning'\r\n      };\r\n    }\r\n    \r\n    if (errorMsg.includes('TRANSACTION_EXPIRED') || errorMsg.includes('expired')) {\r\n      return {\r\n        message: 'Transaction expired due to network delay. Please try again.',\r\n        type: 'warning'\r\n      };\r\n    }\r\n    \r\n    if (errorMsg.includes('INVALID_SIGNATURE') || errorMsg.includes('signature')) {\r\n      return {\r\n        message: 'Invalid signature. Please check your wallet connection and try again.',\r\n        type: 'error'\r\n      };\r\n    }\r\n    \r\n    if (errorMsg.includes('MODULE_NOT_FOUND') || errorMsg.includes('module')) {\r\n      return {\r\n        message: 'Smart contract not found. Please ensure you are on the correct network (Devnet).',\r\n        type: 'error'\r\n      };\r\n    }\r\n    \r\n    if (errorMsg.includes('FUNCTION_NOT_FOUND') || errorMsg.includes('function')) {\r\n      return {\r\n        message: 'Contract function not available. The smart contract may need updating.',\r\n        type: 'error'\r\n      };\r\n    }\r\n    \r\n    if (errorMsg.includes('INVALID_ARGUMENT') || errorMsg.includes('argument')) {\r\n      return {\r\n        message: 'Invalid transaction parameters. Please refresh and try again.',\r\n        type: 'error'\r\n      };\r\n    }\r\n    \r\n    if (errorMsg.includes('rejected') || errorMsg.includes('denied') || errorMsg.includes('cancelled')) {\r\n      return {\r\n        message: 'Transaction was rejected. Please approve the transaction to continue.',\r\n        type: 'warning'\r\n      };\r\n    }\r\n    \r\n    if (errorMsg.includes('network') || errorMsg.includes('connection') || errorMsg.includes('timeout')) {\r\n      return {\r\n        message: 'Network connection issue. Please check your internet connection and try again.',\r\n        type: 'warning'\r\n      };\r\n    }\r\n    \r\n    if (errorMsg.includes('gas') || errorMsg.includes('Gas')) {\r\n      return {\r\n        message: 'Gas estimation failed. Please try again with a higher gas limit.',\r\n        type: 'error'\r\n      };\r\n    }\r\n    \r\n    // Rate limiting or server errors\r\n    if (errorCode === 429 || errorMsg.includes('rate limit') || errorMsg.includes('too many requests')) {\r\n      return {\r\n        message: 'Too many requests. Please wait a moment and try again.',\r\n        type: 'warning'\r\n      };\r\n    }\r\n    \r\n    // Fallback for unknown errors\r\n    return {\r\n      message: `Transaction failed: ${errorMsg || 'Unknown error occurred'}`,\r\n      type: 'error'\r\n    };\r\n  };\r\n  \r\n\r\n\r\n  const showError = (message: string, type: 'error' | 'warning' | 'info' = 'error') => {\r\n    console.error(`${type.toUpperCase()}: ${message}`);\r\n    if (type === 'error') {\r\n      alert(`Error: ${message}`);\r\n    } else if (type === 'warning') {\r\n      alert(`Warning: ${message}`);\r\n    } else {\r\n      alert(`Info: ${message}`);\r\n    }\r\n  };\r\n\r\n  const showSuccess = (title: string, message: string) => {\r\n    console.log(`SUCCESS - ${title}: ${message}`);\r\n  };\r\n\r\n  const mintNFT = async () => {\r\n    // Load validation utilities and API service dynamically\r\n    const [validationUtils, apiService] = await Promise.all([\r\n      import('../utils/validation'),\r\n      import('../services/ipfsService')\r\n    ]);\r\n\r\n    const { validateWalletConnection, validateMoodSeed, validateTransactionCount, validateImageData } = validationUtils;\r\n    const { apiService: api, createNFTMetadata, isStorageAvailable } = apiService;\r\n\r\n    // Check network compatibility first\r\n    const networkCheck = await checkNetworkCompatibility();\r\n    if (!networkCheck.isCompatible) {\r\n      showError(\r\n        `Network mismatch detected. Please switch your wallet to ${networkCheck.expected} network. Currently on: ${networkCheck.actual || 'unknown'}`,\r\n        'error'\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Validation checks\r\n    const walletValidation = validateWalletConnection(account?.address?.toString());\r\n    if (!walletValidation.isValid) {\r\n      showError(walletValidation.error!, 'warning');\r\n      return;\r\n    }\r\n\r\n    const moodValidation = validateMoodSeed(state.moodSeed);\r\n    if (!moodValidation.isValid) {\r\n      showError(moodValidation.error!, 'warning');\r\n      return;\r\n    }\r\n\r\n    const countValidation = validateTransactionCount(state.transactionCount);\r\n    if (!countValidation.isValid) {\r\n      showError(countValidation.error!, 'error');\r\n      return;\r\n    }\r\n\r\n    const imageValidation = validateImageData(state.imageData);\r\n    if (!imageValidation.isValid) {\r\n      showError(imageValidation.error!, 'warning');\r\n      return;\r\n    }\r\n\r\n    // Check if storage service is available\r\n    const storageAvailable = await isStorageAvailable();\r\n\r\n    if (!storageAvailable) {\r\n      // Show warning but continue with placeholder URI\r\n      showError('Storage service not available. Using demo mode for NFT minting.', 'warning');\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    // Clear any previous transaction hash\r\n    setTransactionHash('');\r\n\r\n    try {\r\n      const tokenName = `Aura-${state.moodSeed.replace(/[^a-zA-Z0-9]/g, '')}-${Date.now()}`;\r\n      const description = `Personal aura NFT generated from ${state.transactionCount} transactions with mood \"${state.moodSeed}\"`;\r\n\r\n      let uri: string;\r\n\r\n      if (storageAvailable) {\r\n        // Convert imageData to blob for upload\r\n        const imageBlob = await fetch(state.imageData).then(r => r.blob());\r\n\r\n        console.log('Uploading your aura NFT to IPFS...');\r\n\r\n        // Create metadata first (without image URL)\r\n        const metadata = createNFTMetadata(\r\n          tokenName,\r\n          description,\r\n          '', // Image URL will be set by backend\r\n          [\r\n            { trait_type: 'Mood', value: state.moodSeed },\r\n            { trait_type: 'Transaction Count', value: state.transactionCount.toString() },\r\n            { trait_type: 'Generated At', value: new Date().toISOString() },\r\n            { trait_type: 'Generator', value: 'Aptos Aura Weaver v1.0' }\r\n          ]\r\n        );\r\n\r\n        // Upload complete NFT (image + metadata) in one call\r\n        const uploadResult = await api.uploadNFT({\r\n          imageFile: imageBlob,\r\n          metadata\r\n        });\r\n\r\n        if (!uploadResult.success) {\r\n          throw new Error(`NFT upload failed: ${uploadResult.error}`);\r\n        }\r\n\r\n        uri = uploadResult.url!;\r\n\r\n        console.log('🎨 Minting NFT with parameters:', {\r\n          tokenName,\r\n          moodSeed: state.moodSeed,\r\n          transactionCount: state.transactionCount,\r\n          uri,\r\n          ...(uploadResult.imageHash && { imageHash: uploadResult.imageHash }),\r\n          ...(uploadResult.hash && { metadataHash: uploadResult.hash })\r\n        });\r\n      } else {\r\n        // Use simple placeholder URI for demo (short enough for blockchain)\r\n        console.log('Creating your aura NFT with demo metadata...');\r\n\r\n        // Use a simple HTTP URL instead of long data URI\r\n        const demoUri = `https://demo.aura-aptos.com/nft/${tokenName.replace(/[^a-zA-Z0-9]/g, '')}`;\r\n        uri = demoUri;\r\n\r\n        console.log('🎨 Minting NFT with parameters (Demo Mode):', {\r\n          tokenName,\r\n          moodSeed: state.moodSeed,\r\n          transactionCount: state.transactionCount,\r\n          uri: demoUri\r\n        });\r\n      }\r\n\r\n      // Add minting started log\r\n      console.log(`Minting Started: Creating your aura NFT \"${tokenName}\"...`);\r\n\r\n      // Execute the actual smart contract transaction using wallet adapter\r\n      const response = await signAndSubmitTransaction({\r\n        data: {\r\n          function: \"0x0b65f8046e689981c490d760553a03b9d11775d03d78c141d6a44041c3b12a43::aura_nft::mint_aura\",\r\n          functionArguments: [state.moodSeed, state.transactionCount, tokenName, uri],\r\n        },\r\n        options: {\r\n          maxGasAmount: 10000,\r\n          gasUnitPrice: 100,\r\n        }\r\n      });\r\n      console.log('🎨 Transaction submitted:', response.hash);\r\n\r\n      // Wait for transaction to be processed\r\n      const aptosSDK = await import('@aptos-labs/ts-sdk');\r\n      const network = (process.env.REACT_APP_APTOS_NETWORK as any) || aptosSDK.Network.DEVNET;\r\n      const nodeUrl = process.env.REACT_APP_APTOS_NODE_URL || undefined;\r\n\r\n      const aptosConfig = new aptosSDK.AptosConfig({\r\n        network,\r\n        fullnode: nodeUrl\r\n      });\r\n      const aptos = new aptosSDK.Aptos(aptosConfig);\r\n\r\n      const txResult = await aptos.waitForTransaction({\r\n        transactionHash: response.hash,\r\n      });\r\n\r\n      console.log('✅ Transaction confirmed:', txResult);\r\n\r\n      // Store the transaction hash in the app state\r\n      setTransactionHash(response.hash);\r\n\r\n      // Add success log\r\n      const demoMode = !storageAvailable;\r\n      const successMessage = demoMode\r\n        ? `Your aura NFT \"${tokenName}\" has been minted in demo mode! (Storage service not available)`\r\n        : `Your aura NFT \"${tokenName}\" has been minted with IPFS storage!`;\r\n      console.log(`NFT Minted Successfully: ${successMessage}`);\r\n\r\n      // Log detailed information for development\r\n      console.log('✅ NFT Minting Details:', {\r\n        tokenName,\r\n        description,\r\n        moodSeed: state.moodSeed,\r\n        transactionCount: state.transactionCount,\r\n        walletAddress: account?.address?.toString(),\r\n        imageDataSize: state.imageData.length,\r\n        transactionHash: response.hash,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n\r\n      alert(`Success: ${successMessage}`);\r\n\r\n    } catch (error: any) {\r\n      console.error('❌ Error minting NFT:', error);\r\n      \r\n      // Use comprehensive error mapping\r\n      const { message, type } = mapTransactionError(error);\r\n      showError(message, type);\r\n      \r\n      // Log detailed error for debugging\r\n      console.error('Detailed error info:', {\r\n        originalError: error,\r\n        errorMessage: error?.message,\r\n        errorCode: error?.code,\r\n        errorStatus: error?.status,\r\n        stack: error?.stack\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const downloadAura = () => {\r\n    if (!state.imageData) {\r\n      showError('No aura image available to download', 'warning');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const fileName = `aura-${state.moodSeed.replace(/[^a-zA-Z0-9]/g, '')}-${Date.now()}.png`;\r\n      const link = document.createElement('a');\r\n      link.download = fileName;\r\n      link.href = state.imageData;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n\r\n      showSuccess('Download Complete', `Aura image \"${fileName}\" downloaded successfully!`);\r\n    } catch (error) {\r\n      showError('Failed to download image', 'error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"app-content\">\r\n        <Header />\r\n\r\n        <main className=\"main-content aura-main-content\">\r\n          <div className=\"aura-section aura-section-compact\">\r\n            <div className=\"aura-generator-wrapper\">\r\n              <Suspense fallback={\r\n                <div className=\"aura-loading-fallback\">\r\n                  <div className=\"loading-spinner\"></div>\r\n                </div>\r\n              }>\r\n                <AuraGenerator\r\n                  moodSeed={state.moodSeed}\r\n                  transactionCount={state.transactionCount}\r\n                  onImageGenerated={handleImageGenerated}\r\n                />\r\n              </Suspense>\r\n            </div>\r\n\r\n            {state.imageData && (\r\n              <div className=\"aura-content-wrapper\">\r\n                {/* Action Buttons */}\r\n                <div className=\"action-buttons action-buttons-compact\">\r\n                  <button\r\n                    onClick={mintNFT}\r\n                    disabled={state.loading}\r\n                    className={`btn btn-primary btn-connect-wallet ${state.loading ? 'loading' : ''}`}\r\n                  >\r\n                    {state.loading && <span className=\"loading-spinner\"></span>}\r\n                    <span className=\"generate-text\">{state.loading ? 'Minting...' : 'Mint as NFT'}</span>\r\n                    <div className=\"generate-glow\"></div>\r\n                  </button>\r\n\r\n                  <button\r\n                    onClick={downloadAura}\r\n                    className=\"btn btn-primary btn-connect-wallet btn-download-aura\"\r\n                    title=\"Download your aura as PNG\"\r\n                  >\r\n                    <span className=\"generate-text\">Download</span>\r\n                    <div className=\"generate-glow\"></div>\r\n                  </button>\r\n\r\n                  {state.lastTransactionHash && state.lastTransactionHash.trim() !== '' && (\r\n                    <button\r\n                      onClick={() => openTransactionInExplorer(state.lastTransactionHash!)}\r\n                      className=\"btn btn-secondary btn-connect-wallet btn-explorer\"\r\n                      title={`View transaction on Aptos ${getNetworkDisplayName()}`}\r\n                    >\r\n                      <span className=\"generate-text\">View on Aptos {getNetworkDisplayName()}</span>\r\n                      <div className=\"generate-glow\"></div>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n\r\n              </div>\r\n            )}\r\n          </div>\r\n        </main>\r\n        \r\n        <footer className=\"mvp-footer\">\r\n          <p className=\"mvp-note mvp-note-compact\">\r\n           Live on Aptos Devnet! Switch to Devnet in your wallet and faucet APT.\r\n          </p>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuraPage;","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\r\nimport { useWallet } from '@aptos-labs/wallet-adapter-react';\r\nimport { WalletProvider } from './WalletProvider';\r\nimport { AppProvider } from './contexts/AppContext';\r\nimport LandingPage from './components/LandingPage';\r\nimport WalletPage from './components/WalletPage';\r\nimport AuraPage from './components/AuraPage';\r\nimport './App.css';\r\n\r\n// Get the base name from package.json homepage for GitHub Pages\r\nconst getBasename = () => {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return '/Aptos-Aura-Weaver';\r\n  }\r\n  return '';\r\n};\r\n\r\n// Component to handle navigation based on wallet state\r\nconst AppRoutes: React.FC = () => {\r\n  const { connected } = useWallet();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (connected) {\r\n      // If wallet is connected and we're on landing page, navigate to wallet page\r\n      if (window.location.pathname === getBasename() + '/' || window.location.pathname === getBasename()) {\r\n        navigate('/wallet');\r\n      }\r\n    } else {\r\n      // If wallet is disconnected and we're not on landing page, navigate to landing\r\n      if (window.location.pathname !== getBasename() + '/' && window.location.pathname !== getBasename()) {\r\n        navigate('/');\r\n      }\r\n    }\r\n  }, [connected, navigate]);\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<LandingPage />} />\r\n      <Route\r\n        path=\"/wallet\"\r\n        element={connected ? <WalletPage /> : <Navigate to=\"/\" replace />}\r\n      />\r\n      <Route\r\n        path=\"/aura\"\r\n        element={connected ? <AuraPage /> : <Navigate to=\"/\" replace />}\r\n      />\r\n      {/* Catch all route - redirect to landing */}\r\n      <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <WalletProvider>\r\n      <AppProvider>\r\n        <Router basename={getBasename()}>\r\n          <AppRoutes />\r\n        </Router>\r\n      </AppProvider>\r\n    </WalletProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/**\r\n * Validation utilities for user inputs and data\r\n */\r\n\r\nimport { ValidationResult } from '../types/app';\r\n\r\nexport interface MoodSeedValidationOptions {\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  allowSpecialChars?: boolean;\r\n  maxSpecialCharRatio?: number;\r\n}\r\n\r\nexport interface TransactionCountValidationOptions {\r\n  minValue?: number;\r\n  maxValue?: number;\r\n  allowNegative?: boolean;\r\n}\r\n\r\n/**\r\n * Comprehensive mood seed validation\r\n */\r\nexport const validateMoodSeed = (\r\n  seed: string,\r\n  options: MoodSeedValidationOptions = {}\r\n): ValidationResult => {\r\n  const {\r\n    minLength = 2,\r\n    maxLength = 100,\r\n    allowSpecialChars = true,\r\n    maxSpecialCharRatio = 0.5\r\n  } = options;\r\n\r\n  const trimmedSeed = seed.trim();\r\n\r\n  // Check for empty or whitespace-only input\r\n  if (!trimmedSeed) {\r\n    return {\r\n      isValid: false,\r\n      error: 'Please enter a mood seed to generate your aura'\r\n    };\r\n  }\r\n\r\n  // Check length constraints\r\n  if (trimmedSeed.length < minLength) {\r\n    return {\r\n      isValid: false,\r\n      error: `Mood seed should be at least ${minLength} characters long`\r\n    };\r\n  }\r\n\r\n  if (trimmedSeed.length > maxLength) {\r\n    return {\r\n      isValid: false,\r\n      error: `Mood seed should be less than ${maxLength} characters`\r\n    };\r\n  }\r\n\r\n    // Check for potentially harmful content\r\n    const suspiciousPatterns = [\r\n      /<script/i,\r\n      /javascript:/i,\r\n      /data:/i,\r\n      /vbscript:/i,\r\n      /on\\w+\\s*=/i,\r\n      /[<>\"']/  // Reject angle brackets and quotes\r\n    ];\r\n\r\n    for (const pattern of suspiciousPatterns) {\r\n      if (pattern.test(trimmedSeed)) {\r\n        return {\r\n          isValid: false,\r\n          error: 'Mood seed contains invalid characters (<, >, \", \\'). Please use only letters, numbers, and spaces.'\r\n        };\r\n      }\r\n    }\r\n\r\n    // Check for control characters\r\n    const controlCharPattern = /[\\u0000-\\u001F\\u007F]/; // eslint-disable-line no-control-regex\r\n    if (controlCharPattern.test(trimmedSeed)) {\r\n      return {\r\n        isValid: false,\r\n        error: 'Mood seed contains invalid control characters. Please use only regular text.'\r\n      };\r\n    }\r\n\r\n  // Check for excessive special characters (potential spam)\r\n  if (!allowSpecialChars) {\r\n    const specialCharCount = (trimmedSeed.match(/[^a-zA-Z0-9\\s]/g) || []).length;\r\n    const specialCharRatio = specialCharCount / trimmedSeed.length;\r\n\r\n    if (specialCharRatio > maxSpecialCharRatio) {\r\n      return {\r\n        isValid: false,\r\n        error: 'Mood seed contains too many special characters. Please use more descriptive text.'\r\n      };\r\n    }\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n/**\r\n * Transaction count validation\r\n */\r\nexport const validateTransactionCount = (\r\n  count: number,\r\n  options: TransactionCountValidationOptions = {}\r\n): ValidationResult => {\r\n  const {\r\n    minValue = 0,\r\n    maxValue = 100000,\r\n    allowNegative = false\r\n  } = options;\r\n\r\n  if (typeof count !== 'number' || isNaN(count)) {\r\n    return {\r\n      isValid: false,\r\n      error: 'Invalid transaction count. Please refresh and try again.'\r\n    };\r\n  }\r\n\r\n  if (!allowNegative && count < minValue) {\r\n    return {\r\n      isValid: false,\r\n      error: 'Transaction count cannot be negative.'\r\n    };\r\n  }\r\n\r\n  if (count > maxValue) {\r\n    return {\r\n      isValid: false,\r\n      error: 'Transaction count seems unusually high. Please verify the data.'\r\n    };\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n/**\r\n * Network connectivity validation\r\n */\r\nexport const validateNetworkConnection = (): ValidationResult => {\r\n  if (!navigator.onLine) {\r\n    return {\r\n      isValid: false,\r\n      error: 'No internet connection. Please check your network and try again.'\r\n    };\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n/**\r\n * IPFS configuration validation\r\n */\r\nexport const validateIPFSConfig = (\r\n  apiKey?: string,\r\n  secretKey?: string\r\n): ValidationResult => {\r\n  if (!apiKey || !secretKey) {\r\n    return {\r\n      isValid: false,\r\n      error: 'IPFS configuration missing. Please set up IPFS credentials for NFT storage.'\r\n    };\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n/**\r\n * Wallet connection validation\r\n */\r\nexport const validateWalletConnection = (\r\n  accountAddress?: string | null | undefined\r\n): ValidationResult => {\r\n  if (!accountAddress) {\r\n    return {\r\n      isValid: false,\r\n      error: 'No wallet connected. Please connect your wallet first.'\r\n    };\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n/**\r\n * Image data validation\r\n */\r\nexport const validateImageData = (imageData: string): ValidationResult => {\r\n  if (!imageData) {\r\n    return {\r\n      isValid: false,\r\n      error: 'No aura generated yet. Please wait for the aura to be created.'\r\n    };\r\n  }\r\n\r\n  // Check if it's a valid data URL\r\n  try {\r\n    new URL(imageData);\r\n    return { isValid: true };\r\n  } catch {\r\n    return {\r\n      isValid: false,\r\n      error: 'Invalid image data format.'\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Device and wallet detection utilities\r\n */\r\n\r\n/**\r\n * Check if we're on a desktop device by analyzing user agent\r\n * @returns {boolean} True if desktop device, false if mobile\r\n */\r\nexport const isDesktopDevice = (): boolean => {\r\n  const userAgent = navigator.userAgent.toLowerCase();\r\n  const isMobile = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent);\r\n  return !isMobile;\r\n};\r\n\r\n/**\r\n * Check if Petra wallet extension is installed in the browser\r\n * @returns {boolean} True if Petra wallet is detected, false otherwise\r\n */\r\nexport const isPetraWalletInstalled = (): boolean => {\r\n  return !!(window as any).aptos || !!(window as any).petra;\r\n};\r\n\r\n/**\r\n * Redirect user to Petra wallet installation page\r\n * Opens petra.app in a new tab for desktop users\r\n */\r\nexport const redirectToPetraInstall = (): void => {\r\n  const petraUrl = 'https://petra.app/';\r\n  window.open(petraUrl, '_blank');\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; (typeof current == 'object' || typeof current == 'function') && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + (chunkId === 84 ? \"p5-graphics\" : chunkId) + \".\" + {\"84\":\"9bfb73ef\",\"786\":\"1db47b8c\",\"990\":\"7864d011\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"frontend:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/Aptos-Aura-Weaver/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfrontend\"] = self[\"webpackChunkfrontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [257,96], () => (__webpack_require__(5808)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["WalletProvider","_ref","children","network","process","apiKeys","REACT_APP_PINATA_API_KEY","REACT_APP_PINATA_SECRET_KEY","pinata","apiKey","secretKey","undefined","_jsx","AptosWalletAdapterProvider","autoConnect","dappConfig","aptosApiKeys","optInWallets","onError","error","console","AppContext","createContext","initialState","moodSeed","transactionCount","imageData","loading","lastTransactionHash","AppProvider","state","setState","useState","value","setMoodSeed","prev","_objectSpread","setTransactionCount","count","setImageData","setLoading","setTransactionHash","hash","resetState","Provider","useAppContext","context","useContext","Error","showBackButton","onBackClick","className","_jsxs","onClick","title","LandingPage","connect","useWallet","Header","src","pxArtImage","alt","draggable","async","isPetraWalletInstalled","alert","redirectToPetraInstall","errorMsg","message","toString","includes","concat","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","WalletPage","_account$address","account","disconnect","navigate","useNavigate","localLoading","setLocalLoading","copied","setCopied","autoFetched","setAutoFetched","fetchUserData","useCallback","address","_aptos","expectedNetwork","window","aptos","walletNetwork","actualNetwork","name","toLowerCase","toUpperCase","warn","checkNetworkCompatibility","Aptos","AptosConfig","Network","fullnode","addressString","accountData","getAccountInfo","accountAddress","sequence_number","txCount","parseInt","log","navigator","onLine","Math","floor","random","useEffect","clipboard","writeText","setTimeout","style","cursor","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","ry","points","x1","y1","x2","y2","type","onChange","e","target","onFocus","select","placeholder","spellCheck","autoComplete","autoCorrect","autoCapitalize","disabled","handleContinue","trim","getNetworkDisplayName","expected","actual","networkInfo","getCurrentNetwork","isCompatible","warning","AuraGenerator","lazy","AuraPage","signAndSubmitTransaction","handleImageGenerated","showError","arguments","length","Suspense","fallback","onImageGenerated","validationUtils","apiService","Promise","all","validateWalletConnection","validateMoodSeed","validateTransactionCount","validateImageData","api","createNFTMetadata","isStorageAvailable","networkCheck","walletValidation","isValid","moodValidation","countValidation","imageValidation","storageAvailable","_account$address2","tokenName","replace","Date","now","description","uri","imageBlob","fetch","then","r","blob","metadata","trait_type","toISOString","uploadResult","uploadNFT","imageFile","success","url","imageHash","metadataHash","demoUri","response","data","function","functionArguments","options","maxGasAmount","gasUnitPrice","aptosSDK","nodeUrl","aptosConfig","txResult","waitForTransaction","transactionHash","successMessage","walletAddress","imageDataSize","timestamp","errorCode","code","status","mapTransactionError","originalError","errorMessage","errorStatus","stack","downloadAura","showSuccess","fileName","link","document","createElement","download","href","body","appendChild","click","removeChild","explorerUrl","getAptosExplorerUrl","open","openTransactionInExplorer","AppRoutes","connected","getBasename","location","pathname","Routes","Route","path","element","Navigate","to","Router","basename","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","render","React","App","reportWebVitals","seed","minLength","maxLength","allowSpecialChars","maxSpecialCharRatio","trimmedSeed","suspiciousPatterns","pattern","test","match","minValue","maxValue","allowNegative","isNaN","validateNetworkConnection","validateIPFSConfig","URL","_unused","isDesktopDevice","userAgent","petra","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","amdD","amdO","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","n","getter","__esModule","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","create","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","f","chunkId","reduce","promises","u","miniCssF","g","globalThis","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","push","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","setAttribute","onScriptComplete","event","onerror","onload","clearTimeout","doneFns","parentNode","bind","head","Symbol","toStringTag","p","installedChunks","installedChunkData","promise","resolve","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}