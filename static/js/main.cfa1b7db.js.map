{"version":3,"file":"static/js/main.cfa1b7db.js","mappings":"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","sources":["WalletProvider.tsx","contexts/AppContext.tsx","components/Header.tsx","components/LandingPage.tsx","components/WalletPage.tsx","components/AuraPage.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils/validation.ts","../webpack/bootstrap","../webpack/runtime/amd define","../webpack/runtime/amd options","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["import React from 'react';\r\nimport { AptosWalletAdapterProvider } from '@aptos-labs/wallet-adapter-react';\r\nimport { Network } from '@aptos-labs/ts-sdk';\r\n\r\nexport const WalletProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const network = (process.env.REACT_APP_APTOS_NETWORK as Network) || Network.DEVNET;\r\n  const apiKeys = process.env.REACT_APP_PINATA_API_KEY && process.env.REACT_APP_PINATA_SECRET_KEY\r\n    ? {\r\n        [network]: {\r\n          pinata: {\r\n            apiKey: process.env.REACT_APP_PINATA_API_KEY,\r\n            secretKey: process.env.REACT_APP_PINATA_SECRET_KEY\r\n          }\r\n        }\r\n      }\r\n    : undefined;\r\n\r\n  return (\r\n    <AptosWalletAdapterProvider\r\n      autoConnect={true}\r\n      dappConfig={{\r\n        network,\r\n        aptosApiKeys: apiKeys as any // Type assertion for wallet adapter compatibility\r\n      }}\r\n      optInWallets={[\"Petra\"]} // Explicitly include Petra\r\n      onError={(error) => {\r\n        console.error('Wallet adapter error:', error);\r\n      }}\r\n    >\r\n      {children}\r\n    </AptosWalletAdapterProvider>\r\n  );\r\n};\r\n","import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\nexport interface AppState {\r\n  moodSeed: string;\r\n  transactionCount: number;\r\n  imageData: string;\r\n  loading: boolean;\r\n}\r\n\r\nexport interface AppContextType {\r\n  state: AppState;\r\n  setMoodSeed: (moodSeed: string) => void;\r\n  setTransactionCount: (count: number) => void;\r\n  setImageData: (imageData: string) => void;\r\n  setLoading: (loading: boolean) => void;\r\n  resetState: () => void;\r\n}\r\n\r\nconst AppContext = createContext<AppContextType | undefined>(undefined);\r\n\r\nconst initialState: AppState = {\r\n  moodSeed: '',\r\n  transactionCount: 0,\r\n  imageData: '',\r\n  loading: false,\r\n};\r\n\r\nexport const AppProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [state, setState] = useState<AppState>(initialState);\r\n\r\n  const setMoodSeed = (moodSeed: string) => {\r\n    setState(prev => ({ ...prev, moodSeed }));\r\n  };\r\n\r\n  const setTransactionCount = (count: number) => {\r\n    setState(prev => ({ ...prev, transactionCount: count }));\r\n  };\r\n\r\n  const setImageData = (imageData: string) => {\r\n    setState(prev => ({ ...prev, imageData }));\r\n  };\r\n\r\n  const setLoading = (loading: boolean) => {\r\n    setState(prev => ({ ...prev, loading }));\r\n  };\r\n\r\n  const resetState = () => {\r\n    setState(initialState);\r\n  };\r\n\r\n  const value: AppContextType = {\r\n    state,\r\n    setMoodSeed,\r\n    setTransactionCount,\r\n    setImageData,\r\n    setLoading,\r\n    resetState,\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppContext = () => {\r\n  const context = useContext(AppContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAppContext must be used within an AppProvider');\r\n  }\r\n  return context;\r\n};","import React from 'react';\r\n\r\ninterface HeaderProps {\r\n  showBackButton?: boolean;\r\n  onBackClick?: () => void;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ showBackButton = false, onBackClick }) => {\r\n  return (\r\n    <header className=\"app-header\">\r\n      <div className=\"header-content\">\r\n        <div className=\"header-text\">\r\n          <h1 className=\"app-title\">APTOS AURA WEAVER</h1>\r\n          <p className=\"app-subtitle\">Generate your personalized aura NFT based on your on-chain activity</p>\r\n        </div>\r\n        <div className=\"header-actions\">\r\n          {showBackButton && (\r\n            <button\r\n              onClick={onBackClick}\r\n              className=\"btn btn-secondary back-button\"\r\n              title=\"Go back\"\r\n            >\r\n              ← Back\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { useWallet } from '@aptos-labs/wallet-adapter-react';\r\nimport Header from '../components/Header';\r\nimport pxArtImage from '../pxArt.png';\r\nimport { isPetraWalletInstalled, redirectToPetraInstall } from '../utils/validation';\r\n\r\nconst LandingPage: React.FC = () => {\r\n  const { connect } = useWallet();\r\n\r\n  const handleConnect = async () => {\r\n    // Check if Petra wallet is installed first\r\n    if (!isPetraWalletInstalled()) {\r\n      redirectToPetraInstall();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await connect('Petra');\r\n      // Navigation will be handled by wallet state change in App.tsx\r\n    } catch (error: any) {\r\n      console.error('Wallet connection error:', error);\r\n      \r\n      // Check if the error might be due to Petra not being installed\r\n      if (error?.message?.includes('No provider') || error?.message?.includes('not found')) {\r\n        redirectToPetraInstall();\r\n      } else {\r\n        alert('Failed to connect wallet. Please make sure Petra wallet is unlocked and try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"app-content\">\r\n        <Header />\r\n\r\n        <main className=\"main-content\">\r\n          <div className=\"landing-section\">\r\n            <div className=\"pixel-art-container\">\r\n              <img src={pxArtImage} alt=\"Pixel Art Character\" className=\"pixel-art-image\" draggable=\"false\" />\r\n            </div>\r\n\r\n            <div className=\"landing-content\">\r\n              <button\r\n                onClick={handleConnect}\r\n                className=\"btn btn-primary btn-connect-wallet\"\r\n              >\r\n                <svg width=\"20\" height=\"19\" viewBox=\"0 0 35 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"petra-svg\">\r\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 19.4667C0 8.94232 8.53168 0.410645 19.056 0.410645C33.0023 0.410645 39.6271 17.5875 29.2927 26.9522L24.4311 31.3576L15.654 23.3559L27.2291 12.2877H11.8771V32.1818H0V19.4667Z\" fill=\"currentColor\"/>\r\n                </svg>\r\n                Connect Petra Wallet\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useWallet } from '@aptos-labs/wallet-adapter-react';\r\nimport Header from '../components/Header';\r\nimport { useAppContext } from '../contexts/AppContext';\r\n\r\nconst WalletPage: React.FC = () => {\r\n  const { account, disconnect } = useWallet();\r\n  const navigate = useNavigate();\r\n  const { state, setMoodSeed, setTransactionCount, setLoading } = useAppContext();\r\n  const [localLoading, setLocalLoading] = useState(false);\r\n  const [copied, setCopied] = useState(false);\r\n  const [autoFetched, setAutoFetched] = useState(false);\r\n\r\n  const fetchUserData = useCallback(async () => {\r\n    if (!account?.address) return;\r\n\r\n    setLocalLoading(true);\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Import Aptos SDK dynamically\r\n      const { Aptos, AptosConfig, Network } = await import('@aptos-labs/ts-sdk');\r\n\r\n      const network = (process.env.REACT_APP_APTOS_NETWORK as any) || Network.DEVNET;\r\n      const nodeUrl = process.env.REACT_APP_APTOS_NODE_URL || undefined;\r\n\r\n      const aptosConfig = new AptosConfig({\r\n        network,\r\n        fullnode: nodeUrl\r\n      });\r\n      const aptos = new Aptos(aptosConfig);\r\n\r\n      const addressString = account.address.toString();\r\n      const accountData = await aptos.getAccountInfo({ accountAddress: addressString });\r\n\r\n      if (!accountData || typeof accountData.sequence_number === 'undefined') {\r\n        throw new Error('Invalid response from Aptos node');\r\n      }\r\n\r\n      const txCount = parseInt(accountData.sequence_number);\r\n      setTransactionCount(txCount);\r\n\r\n      console.log(`Data fetched: Found ${txCount} transactions`);\r\n\r\n      if (txCount === 0) {\r\n        alert('Your account has no transactions yet. You can still create an aura!');\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error fetching user data:', error);\r\n\r\n      if (error?.message?.includes('not found') || error?.message?.includes('Invalid response')) {\r\n        setTransactionCount(0);\r\n        alert('Account not found on Aptos network. Using default values for demo.');\r\n      } else if (error?.message?.includes('network') || !navigator.onLine) {\r\n        alert('Network error. Please check your connection and try again.');\r\n      } else {\r\n        alert('Unable to fetch account data. Using demo values.');\r\n        setTransactionCount(Math.floor(Math.random() * 50) + 5);\r\n      }\r\n    } finally {\r\n      setLocalLoading(false);\r\n      setLoading(false);\r\n    }\r\n  }, [account, setTransactionCount, setLoading]);\r\n\r\n  // Auto-fetch transaction data when wallet is connected\r\n  useEffect(() => {\r\n    if (account?.address && !autoFetched && state.transactionCount === 0 && !localLoading) {\r\n      console.log('Auto-fetching transaction data for connected wallet...');\r\n      setAutoFetched(true);\r\n      fetchUserData();\r\n    }\r\n  }, [account?.address, autoFetched, state.transactionCount, localLoading, fetchUserData]);\r\n\r\n  // Reset auto-fetch state when wallet disconnects\r\n  useEffect(() => {\r\n    if (!account?.address) {\r\n      setAutoFetched(false);\r\n    }\r\n  }, [account?.address]);\r\n\r\n  const handleContinue = () => {\r\n    if (state.moodSeed.trim()) {\r\n      navigate('/aura');\r\n    } else {\r\n      alert('Please enter a mood seed to continue.');\r\n    }\r\n  };\r\n\r\n  const handleCopyAddress = async () => {\r\n    if (account?.address) {\r\n      try {\r\n        await navigator.clipboard.writeText(account.address.toString());\r\n        setCopied(true);\r\n        setTimeout(() => setCopied(false), 2000);\r\n      } catch (error) {\r\n        console.error('Failed to copy address:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"app-content\">\r\n        <Header />\r\n        \r\n        <main className=\"main-content\">\r\n          <div className=\"wallet-section\">\r\n            <div className=\"wallet-main\">\r\n              <div className=\"wallet-header-info\">\r\n                <div className=\"wallet-address-display\">\r\n                  <span \r\n                    className={`address-value ${copied ? 'copied' : ''}`} \r\n                    onClick={handleCopyAddress}\r\n                    style={{ cursor: 'pointer' }}\r\n                  >\r\n                    {account?.address?.toString()}\r\n                    <svg className=\"copy-icon\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                      <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\r\n                      <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>\r\n                    </svg>\r\n                    <svg className={`checkmark-icon ${copied ? 'visible' : ''}`} width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                      <polyline points=\"20,6 9,17 4,12\"></polyline>\r\n                    </svg>\r\n                  </span>\r\n                </div>\r\n                <button\r\n                  onClick={disconnect}\r\n                  className=\"disconnect-btn\"\r\n                  title=\"Disconnect Wallet\"\r\n                >\r\n                  <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"mood-input-section\">\r\n                <div className=\"mood-input-container\">\r\n                  <label className=\"mood-label\">Your Mood Seed</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={state.moodSeed}\r\n                    onChange={(e) => setMoodSeed(e.target.value)}\r\n                    placeholder=\"\"\r\n                    className=\"mood-input\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"data-fetch-section\">\r\n                  <button\r\n                    onClick={() => {\r\n                      setAutoFetched(false);\r\n                      fetchUserData();\r\n                    }}\r\n                    disabled={localLoading}\r\n                    className=\"sync-btn\"\r\n                    title=\"Refresh transaction data\"\r\n                  >\r\n                    <svg className={`sync-icon ${localLoading ? 'rotating' : ''}`} width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                      <polyline points=\"23,4 23,10 17,10\"></polyline>\r\n                      <polyline points=\"1,20 1,14 7,14\"></polyline>\r\n                      <path d=\"M20.49,9A9,9,0,0,0,5.64,5.64L1,10m22,4l-4.64,4.36A9,9,0,0,1,3.51,15\"></path>\r\n                    </svg>\r\n                  </button>\r\n                  <span className=\"tx-count\">Tx: {state.transactionCount}</span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"generate-section\">\r\n                <button\r\n                  onClick={handleContinue}\r\n                  disabled={!state.moodSeed.trim() || state.transactionCount < 0}\r\n                  className=\"btn btn-primary btn-connect-wallet\"\r\n                >\r\n                  <span className=\"generate-text\">Generate My Aura</span>\r\n                  <div className=\"generate-glow\"></div>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletPage;","import React, { Suspense, lazy, useCallback } from 'react';\r\nimport { useWallet } from '@aptos-labs/wallet-adapter-react';\r\nimport Header from '../components/Header';\r\nimport { useAppContext } from '../contexts/AppContext';\r\n\r\n// Lazy load the heavy AuraGenerator component\r\nconst AuraGenerator = lazy(() => import('../AuraGenerator'));\r\n\r\nconst AuraPage: React.FC = () => {\r\n  const { account, signAndSubmitTransaction } = useWallet();\r\n  const { state, setImageData, setLoading } = useAppContext();\r\n\r\n  // Memoize the image callback to prevent unnecessary re-renders\r\n  const handleImageGenerated = useCallback((imageData: string) => {\r\n    setImageData(imageData);\r\n  }, [setImageData]);\r\n\r\n  const showError = (message: string, type: 'error' | 'warning' | 'info' = 'error') => {\r\n    console.error(`${type.toUpperCase()}: ${message}`);\r\n    if (type === 'error') {\r\n      alert(`Error: ${message}`);\r\n    }\r\n  };\r\n\r\n  const showSuccess = (title: string, message: string) => {\r\n    console.log(`SUCCESS - ${title}: ${message}`);\r\n  };\r\n\r\n  const mintNFT = async () => {\r\n    // Load validation utilities and API service dynamically\r\n    const [validationUtils, apiService] = await Promise.all([\r\n      import('../utils/validation'),\r\n      import('../services/ipfsService')\r\n    ]);\r\n\r\n    const { validateWalletConnection, validateMoodSeed, validateTransactionCount, validateImageData } = validationUtils;\r\n    const { apiService: api, createNFTMetadata, isStorageAvailable } = apiService;\r\n\r\n    // Validation checks\r\n    const walletValidation = validateWalletConnection(account?.address?.toString());\r\n    if (!walletValidation.isValid) {\r\n      showError(walletValidation.error!, 'warning');\r\n      return;\r\n    }\r\n\r\n    const moodValidation = validateMoodSeed(state.moodSeed);\r\n    if (!moodValidation.isValid) {\r\n      showError(moodValidation.error!, 'warning');\r\n      return;\r\n    }\r\n\r\n    const countValidation = validateTransactionCount(state.transactionCount);\r\n    if (!countValidation.isValid) {\r\n      showError(countValidation.error!, 'error');\r\n      return;\r\n    }\r\n\r\n    const imageValidation = validateImageData(state.imageData);\r\n    if (!imageValidation.isValid) {\r\n      showError(imageValidation.error!, 'warning');\r\n      return;\r\n    }\r\n\r\n    // Check if storage service is available\r\n    const storageAvailable = await isStorageAvailable();\r\n\r\n    if (!storageAvailable) {\r\n      // Show warning but continue with placeholder URI\r\n      showError('Storage service not available. Using demo mode for NFT minting.', 'warning');\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const tokenName = `Aura-${state.moodSeed.replace(/[^a-zA-Z0-9]/g, '')}-${Date.now()}`;\r\n      const description = `Personal aura NFT generated from ${state.transactionCount} transactions with mood \"${state.moodSeed}\"`;\r\n\r\n      let uri: string;\r\n\r\n      if (storageAvailable) {\r\n        // Convert imageData to blob for upload\r\n        const imageBlob = await fetch(state.imageData).then(r => r.blob());\r\n\r\n        console.log('Uploading your aura NFT to IPFS...');\r\n\r\n        // Create metadata first (without image URL)\r\n        const metadata = createNFTMetadata(\r\n          tokenName,\r\n          description,\r\n          '', // Image URL will be set by backend\r\n          [\r\n            { trait_type: 'Mood', value: state.moodSeed },\r\n            { trait_type: 'Transaction Count', value: state.transactionCount.toString() },\r\n            { trait_type: 'Generated At', value: new Date().toISOString() },\r\n            { trait_type: 'Generator', value: 'Aptos Aura Weaver v1.0' }\r\n          ]\r\n        );\r\n\r\n        // Upload complete NFT (image + metadata) in one call\r\n        const uploadResult = await api.uploadNFT({\r\n          imageFile: imageBlob,\r\n          metadata\r\n        });\r\n\r\n        if (!uploadResult.success) {\r\n          throw new Error(`NFT upload failed: ${uploadResult.error}`);\r\n        }\r\n\r\n        uri = uploadResult.url!;\r\n\r\n        console.log('🎨 Minting NFT with parameters:', {\r\n          tokenName,\r\n          moodSeed: state.moodSeed,\r\n          transactionCount: state.transactionCount,\r\n          uri,\r\n          ...(uploadResult.imageHash && { imageHash: uploadResult.imageHash }),\r\n          ...(uploadResult.hash && { metadataHash: uploadResult.hash })\r\n        });\r\n      } else {\r\n        // Use simple placeholder URI for demo (short enough for blockchain)\r\n        console.log('Creating your aura NFT with demo metadata...');\r\n\r\n        // Use a simple HTTP URL instead of long data URI\r\n        const demoUri = `https://demo.aura-aptos.com/nft/${tokenName.replace(/[^a-zA-Z0-9]/g, '')}`;\r\n        uri = demoUri;\r\n\r\n        console.log('🎨 Minting NFT with parameters (Demo Mode):', {\r\n          tokenName,\r\n          moodSeed: state.moodSeed,\r\n          transactionCount: state.transactionCount,\r\n          uri: demoUri\r\n        });\r\n      }\r\n\r\n      // Add minting started log\r\n      console.log(`Minting Started: Creating your aura NFT \"${tokenName}\"...`);\r\n\r\n      // Execute the actual smart contract transaction using wallet adapter\r\n      const response = await signAndSubmitTransaction({\r\n        data: {\r\n          function: \"0x0b65f8046e689981c490d760553a03b9d11775d03d78c141d6a44041c3b12a43::aura_nft::mint_aura\",\r\n          functionArguments: [state.moodSeed, state.transactionCount, tokenName, uri],\r\n        },\r\n        options: {\r\n          maxGasAmount: 10000,\r\n          gasUnitPrice: 100,\r\n        }\r\n      });\r\n      console.log('🎨 Transaction submitted:', response.hash);\r\n\r\n      // Wait for transaction to be processed\r\n      const { Aptos, AptosConfig, Network } = await import('@aptos-labs/ts-sdk');\r\n      const network = (process.env.REACT_APP_APTOS_NETWORK as any) || Network.DEVNET;\r\n      const nodeUrl = process.env.REACT_APP_APTOS_NODE_URL || undefined;\r\n\r\n      const aptosConfig = new AptosConfig({\r\n        network,\r\n        fullnode: nodeUrl\r\n      });\r\n      const aptos = new Aptos(aptosConfig);\r\n\r\n      const txResult = await aptos.waitForTransaction({\r\n        transactionHash: response.hash,\r\n      });\r\n\r\n      console.log('✅ Transaction confirmed:', txResult);\r\n\r\n      // Add success log\r\n      const demoMode = !storageAvailable;\r\n      const successMessage = demoMode\r\n        ? `Your aura NFT \"${tokenName}\" has been minted in demo mode! (Storage service not available)`\r\n        : `Your aura NFT \"${tokenName}\" has been minted with IPFS storage!`;\r\n      console.log(`NFT Minted Successfully: ${successMessage}`);\r\n\r\n      // Log detailed information for development\r\n      console.log('✅ NFT Minting Details:', {\r\n        tokenName,\r\n        description,\r\n        moodSeed: state.moodSeed,\r\n        transactionCount: state.transactionCount,\r\n        walletAddress: account?.address?.toString(),\r\n        imageDataSize: state.imageData.length,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n\r\n      alert(`🎉 ${successMessage}`);\r\n\r\n    } catch (error: any) {\r\n      console.error('❌ Error minting NFT:', error);\r\n\r\n      if (error?.message?.includes('insufficient funds')) {\r\n        showError('Insufficient funds to mint NFT. Please ensure you have enough APT tokens.', 'error');\r\n      } else if (error?.message?.includes('network')) {\r\n        showError('Network error during minting. Please check your connection and try again.', 'error');\r\n      } else if (error?.message?.includes('rejected')) {\r\n        showError('Transaction was rejected. Please try again.', 'warning');\r\n      } else {\r\n        showError('Failed to mint NFT. Please try again later.', 'error');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const downloadAura = () => {\r\n    if (!state.imageData) {\r\n      showError('No aura image available to download', 'warning');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const fileName = `aura-${state.moodSeed.replace(/[^a-zA-Z0-9]/g, '')}-${Date.now()}.png`;\r\n      const link = document.createElement('a');\r\n      link.download = fileName;\r\n      link.href = state.imageData;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n\r\n      showSuccess('Download Complete', `Aura image \"${fileName}\" downloaded successfully!`);\r\n    } catch (error) {\r\n      showError('Failed to download image', 'error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"app-content\">\r\n        <Header />\r\n\r\n        <main className=\"main-content aura-main-content\">\r\n          <div className=\"aura-section aura-section-compact\">\r\n            <div className=\"aura-generator-wrapper\">\r\n              <Suspense fallback={\r\n                <div className=\"aura-loading-fallback\">\r\n                  <div className=\"loading-spinner\"></div>\r\n                </div>\r\n              }>\r\n                <AuraGenerator\r\n                  moodSeed={state.moodSeed}\r\n                  transactionCount={state.transactionCount}\r\n                  onImageGenerated={handleImageGenerated}\r\n                />\r\n              </Suspense>\r\n            </div>\r\n\r\n            {state.imageData && (\r\n              <div className=\"aura-content-wrapper\">\r\n                {/* Action Buttons */}\r\n                <div className=\"action-buttons action-buttons-compact\">\r\n                  <button\r\n                    onClick={mintNFT}\r\n                    disabled={state.loading}\r\n                    className={`btn btn-primary btn-connect-wallet ${state.loading ? 'loading' : ''}`}\r\n                  >\r\n                    {state.loading && <span className=\"loading-spinner\"></span>}\r\n                    <span className=\"generate-text\">{state.loading ? 'Minting...' : 'Mint as NFT'}</span>\r\n                    <div className=\"generate-glow\"></div>\r\n                  </button>\r\n\r\n                  <button\r\n                    onClick={downloadAura}\r\n                    className=\"btn btn-primary btn-connect-wallet btn-download-aura\"\r\n                    title=\"Download your aura as PNG\"\r\n                  >\r\n                    <span className=\"generate-text\">Download</span>\r\n                    <div className=\"generate-glow\"></div>\r\n                  </button>\r\n                </div>\r\n\r\n              </div>\r\n            )}\r\n          </div>\r\n        </main>\r\n        \r\n        <footer className=\"mvp-footer\">\r\n          <p className=\"mvp-note mvp-note-compact\">\r\n           Live on Aptos Devnet! Your NFTs will be minted on-chain.\r\n          </p>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuraPage;","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport { useWallet } from '@aptos-labs/wallet-adapter-react';\nimport { WalletProvider } from './WalletProvider';\nimport { AppProvider } from './contexts/AppContext';\nimport LandingPage from './components/LandingPage';\nimport WalletPage from './components/WalletPage';\nimport AuraPage from './components/AuraPage';\nimport './App.css';\n\n// Component to handle navigation based on wallet state\nconst AppRoutes: React.FC = () => {\n  const { connected } = useWallet();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (connected) {\n      // If wallet is connected and we're on landing page, navigate to wallet page\n      if (window.location.pathname === '/') {\n        navigate('/wallet');\n      }\n    } else {\n      // If wallet is disconnected and we're not on landing page, navigate to landing\n      if (window.location.pathname !== '/') {\n        navigate('/');\n      }\n    }\n  }, [connected, navigate]);\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<LandingPage />} />\n      <Route\n        path=\"/wallet\"\n        element={connected ? <WalletPage /> : <Navigate to=\"/\" replace />}\n      />\n      <Route\n        path=\"/aura\"\n        element={connected ? <AuraPage /> : <Navigate to=\"/\" replace />}\n      />\n      {/* Catch all route - redirect to landing */}\n      <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n    </Routes>\n  );\n};\n\nfunction App() {\n  return (\n    <WalletProvider>\n      <AppProvider>\n        <Router>\n          <AppRoutes />\n        </Router>\n      </AppProvider>\n    </WalletProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/**\r\n * Validation utilities for user inputs and data\r\n */\r\n\r\nimport { ValidationResult } from '../types/app';\r\n\r\nexport interface MoodSeedValidationOptions {\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  allowSpecialChars?: boolean;\r\n  maxSpecialCharRatio?: number;\r\n}\r\n\r\nexport interface TransactionCountValidationOptions {\r\n  minValue?: number;\r\n  maxValue?: number;\r\n  allowNegative?: boolean;\r\n}\r\n\r\n/**\r\n * Comprehensive mood seed validation\r\n */\r\nexport const validateMoodSeed = (\r\n  seed: string,\r\n  options: MoodSeedValidationOptions = {}\r\n): ValidationResult => {\r\n  const {\r\n    minLength = 2,\r\n    maxLength = 100,\r\n    allowSpecialChars = true,\r\n    maxSpecialCharRatio = 0.5\r\n  } = options;\r\n\r\n  const trimmedSeed = seed.trim();\r\n\r\n  // Check for empty or whitespace-only input\r\n  if (!trimmedSeed) {\r\n    return {\r\n      isValid: false,\r\n      error: 'Please enter a mood seed to generate your aura'\r\n    };\r\n  }\r\n\r\n  // Check length constraints\r\n  if (trimmedSeed.length < minLength) {\r\n    return {\r\n      isValid: false,\r\n      error: `Mood seed should be at least ${minLength} characters long`\r\n    };\r\n  }\r\n\r\n  if (trimmedSeed.length > maxLength) {\r\n    return {\r\n      isValid: false,\r\n      error: `Mood seed should be less than ${maxLength} characters`\r\n    };\r\n  }\r\n\r\n    // Check for potentially harmful content\r\n    const suspiciousPatterns = [\r\n      /<script/i,\r\n      /javascript:/i,\r\n      /data:/i,\r\n      /vbscript:/i,\r\n      /on\\w+\\s*=/i,\r\n      /[<>\"']/  // Reject angle brackets and quotes\r\n    ];\r\n\r\n    for (const pattern of suspiciousPatterns) {\r\n      if (pattern.test(trimmedSeed)) {\r\n        return {\r\n          isValid: false,\r\n          error: 'Mood seed contains invalid characters (<, >, \", \\'). Please use only letters, numbers, and spaces.'\r\n        };\r\n      }\r\n    }\r\n\r\n    // Check for control characters\r\n    const controlCharPattern = /[\\u0000-\\u001F\\u007F]/; // eslint-disable-line no-control-regex\r\n    if (controlCharPattern.test(trimmedSeed)) {\r\n      return {\r\n        isValid: false,\r\n        error: 'Mood seed contains invalid control characters. Please use only regular text.'\r\n      };\r\n    }\r\n\r\n  // Check for excessive special characters (potential spam)\r\n  if (!allowSpecialChars) {\r\n    const specialCharCount = (trimmedSeed.match(/[^a-zA-Z0-9\\s]/g) || []).length;\r\n    const specialCharRatio = specialCharCount / trimmedSeed.length;\r\n\r\n    if (specialCharRatio > maxSpecialCharRatio) {\r\n      return {\r\n        isValid: false,\r\n        error: 'Mood seed contains too many special characters. Please use more descriptive text.'\r\n      };\r\n    }\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n/**\r\n * Transaction count validation\r\n */\r\nexport const validateTransactionCount = (\r\n  count: number,\r\n  options: TransactionCountValidationOptions = {}\r\n): ValidationResult => {\r\n  const {\r\n    minValue = 0,\r\n    maxValue = 100000,\r\n    allowNegative = false\r\n  } = options;\r\n\r\n  if (typeof count !== 'number' || isNaN(count)) {\r\n    return {\r\n      isValid: false,\r\n      error: 'Invalid transaction count. Please refresh and try again.'\r\n    };\r\n  }\r\n\r\n  if (!allowNegative && count < minValue) {\r\n    return {\r\n      isValid: false,\r\n      error: 'Transaction count cannot be negative.'\r\n    };\r\n  }\r\n\r\n  if (count > maxValue) {\r\n    return {\r\n      isValid: false,\r\n      error: 'Transaction count seems unusually high. Please verify the data.'\r\n    };\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n/**\r\n * Network connectivity validation\r\n */\r\nexport const validateNetworkConnection = (): ValidationResult => {\r\n  if (!navigator.onLine) {\r\n    return {\r\n      isValid: false,\r\n      error: 'No internet connection. Please check your network and try again.'\r\n    };\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n/**\r\n * IPFS configuration validation\r\n */\r\nexport const validateIPFSConfig = (\r\n  apiKey?: string,\r\n  secretKey?: string\r\n): ValidationResult => {\r\n  if (!apiKey || !secretKey) {\r\n    return {\r\n      isValid: false,\r\n      error: 'IPFS configuration missing. Please set up IPFS credentials for NFT storage.'\r\n    };\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n/**\r\n * Wallet connection validation\r\n */\r\nexport const validateWalletConnection = (\r\n  accountAddress?: string | null | undefined\r\n): ValidationResult => {\r\n  if (!accountAddress) {\r\n    return {\r\n      isValid: false,\r\n      error: 'No wallet connected. Please connect your wallet first.'\r\n    };\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n/**\r\n * Image data validation\r\n */\r\nexport const validateImageData = (imageData: string): ValidationResult => {\r\n  if (!imageData) {\r\n    return {\r\n      isValid: false,\r\n      error: 'No aura generated yet. Please wait for the aura to be created.'\r\n    };\r\n  }\r\n\r\n  // Check if it's a valid data URL\r\n  try {\r\n    new URL(imageData);\r\n    return { isValid: true };\r\n  } catch {\r\n    return {\r\n      isValid: false,\r\n      error: 'Invalid image data format.'\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Device and wallet detection utilities\r\n */\r\n\r\n/**\r\n * Check if we're on a desktop device by analyzing user agent\r\n * @returns {boolean} True if desktop device, false if mobile\r\n */\r\nexport const isDesktopDevice = (): boolean => {\r\n  const userAgent = navigator.userAgent.toLowerCase();\r\n  const isMobile = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent);\r\n  return !isMobile;\r\n};\r\n\r\n/**\r\n * Check if Petra wallet extension is installed in the browser\r\n * @returns {boolean} True if Petra wallet is detected, false otherwise\r\n */\r\nexport const isPetraWalletInstalled = (): boolean => {\r\n  return !!(window as any).aptos || !!(window as any).petra;\r\n};\r\n\r\n/**\r\n * Redirect user to Petra wallet installation page\r\n * Opens petra.app in a new tab for desktop users\r\n */\r\nexport const redirectToPetraInstall = (): void => {\r\n  const petraUrl = 'https://petra.app/';\r\n  window.open(petraUrl, '_blank');\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; (typeof current == 'object' || typeof current == 'function') && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + (chunkId === 84 ? \"p5-graphics\" : chunkId) + \".\" + {\"84\":\"9bfb73ef\",\"786\":\"1db47b8c\",\"990\":\"7864d011\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"frontend:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/Aptos-Aura-Weaver/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfrontend\"] = self[\"webpackChunkfrontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [257,96], () => (__webpack_require__(4060)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["WalletProvider","_ref","children","network","process","apiKeys","REACT_APP_PINATA_API_KEY","REACT_APP_PINATA_SECRET_KEY","pinata","apiKey","secretKey","undefined","_jsx","AptosWalletAdapterProvider","autoConnect","dappConfig","aptosApiKeys","optInWallets","onError","error","console","AppContext","createContext","initialState","moodSeed","transactionCount","imageData","loading","AppProvider","state","setState","useState","value","setMoodSeed","prev","_objectSpread","setTransactionCount","count","setImageData","setLoading","resetState","Provider","useAppContext","context","useContext","Error","showBackButton","onBackClick","className","_jsxs","onClick","title","LandingPage","connect","useWallet","Header","src","pxArtImage","alt","draggable","async","isPetraWalletInstalled","_error$message","_error$message2","message","includes","redirectToPetraInstall","alert","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","WalletPage","_account$address","account","disconnect","navigate","useNavigate","localLoading","setLocalLoading","copied","setCopied","autoFetched","setAutoFetched","fetchUserData","useCallback","address","Aptos","AptosConfig","Network","aptos","fullnode","addressString","toString","accountData","getAccountInfo","accountAddress","sequence_number","txCount","parseInt","log","concat","_error$message3","navigator","onLine","Math","floor","random","useEffect","clipboard","writeText","setTimeout","style","cursor","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","ry","points","x1","y1","x2","y2","type","onChange","e","target","placeholder","disabled","handleContinue","trim","AuraGenerator","lazy","AuraPage","signAndSubmitTransaction","handleImageGenerated","showError","arguments","length","toUpperCase","Suspense","fallback","onImageGenerated","validationUtils","apiService","Promise","all","validateWalletConnection","validateMoodSeed","validateTransactionCount","validateImageData","api","createNFTMetadata","isStorageAvailable","walletValidation","isValid","moodValidation","countValidation","imageValidation","storageAvailable","_account$address2","tokenName","replace","Date","now","description","uri","imageBlob","fetch","then","r","blob","metadata","trait_type","toISOString","uploadResult","uploadNFT","imageFile","success","url","imageHash","hash","metadataHash","demoUri","response","data","function","functionArguments","options","maxGasAmount","gasUnitPrice","txResult","waitForTransaction","transactionHash","successMessage","walletAddress","imageDataSize","timestamp","downloadAura","showSuccess","fileName","link","document","createElement","download","href","body","appendChild","click","removeChild","AppRoutes","connected","window","location","pathname","Routes","Route","path","element","Navigate","to","Router","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","render","React","App","reportWebVitals","seed","minLength","maxLength","allowSpecialChars","maxSpecialCharRatio","trimmedSeed","suspiciousPatterns","pattern","test","match","minValue","maxValue","allowNegative","isNaN","validateNetworkConnection","validateIPFSConfig","URL","_unused","isDesktopDevice","userAgent","toLowerCase","petra","open","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","amdD","amdO","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","n","getter","__esModule","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","create","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","f","chunkId","reduce","promises","u","miniCssF","g","globalThis","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","push","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","setAttribute","onScriptComplete","event","onerror","onload","clearTimeout","doneFns","parentNode","bind","head","Symbol","toStringTag","p","installedChunks","installedChunkData","promise","resolve","reject","errorType","realSrc","name","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}