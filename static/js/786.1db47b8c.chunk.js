"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[786],{8786:(a,t,e)=>{e.r(t),e.d(t,{apiService:()=>r,createNFTMetadata:()=>n,getIPFSConfig:()=>i,isStorageAvailable:()=>s,uploadMetadataToIPFS:()=>c,uploadToIPFS:()=>l});const o={getBackendUrl:()=>{const a="https://aptos-aura-weaver.up.railway.app",t="http://localhost:3001";return console.log("\ud83d\udd0d Environment check:",{NODE_ENV:"production",hostname:window.location.hostname,productionUrl:a,developmentUrl:t}),a?(console.log("\ud83c\udfaf Attempting to use production backend:",a),a):(console.log("\ud83d\udd27 Using development backend:",t),t)},isDevelopment:()=>!1,getAllBackendUrls:()=>["https://aptos-aura-weaver.up.railway.app","http://localhost:3001","http://localhost:3001","http://localhost:3002"].filter(Boolean).filter(a=>"https://your-railway-app.up.railway.app"!==a)};const r=new class{constructor(){this.baseUrl=void 0,this.baseUrl=o.getBackendUrl()}async isAvailable(){try{if((await fetch("".concat(this.baseUrl,"/health"),{method:"GET",signal:AbortSignal.timeout(5e3)})).ok)return console.log("\u2705 Backend available at:",this.baseUrl),!0}catch(a){console.warn("\u274c Backend not available at:",this.baseUrl)}return await this.tryFallbackUrls()}async tryFallbackUrls(){const a=o.getAllBackendUrls();for(const e of a)if(e!==this.baseUrl)try{if((await fetch("".concat(e,"/health"),{method:"GET",signal:AbortSignal.timeout(3e3)})).ok)return console.log("\ud83d\udd04 Switched to fallback backend:",e),this.baseUrl=e,!0}catch(t){console.warn("\u274c Fallback URL failed:",e)}return console.warn("\u274c No backend services available"),!1}async uploadNFT(a){try{const t=new FormData;t.append("image",a.imageFile),t.append("metadata",JSON.stringify(a.metadata));const e=await fetch("".concat(this.baseUrl,"/api/upload-nft"),{method:"POST",body:t});if(!e.ok)throw new Error("Upload failed: ".concat(e.statusText));const o=await e.json();if(!o.success)throw new Error(o.error||"Upload failed");return o}catch(t){return console.error("NFT upload error:",t),{success:!1,error:t instanceof Error?t.message:"Unknown upload error"}}}async uploadImage(a){try{const t=new FormData;t.append("file",a);const e=await fetch("".concat(this.baseUrl,"/api/upload-file"),{method:"POST",body:t});if(!e.ok)throw new Error("Image upload failed: ".concat(e.statusText));const o=await e.json();if(!o.success)throw new Error(o.error||"Image upload failed");return o}catch(t){return console.error("Image upload error:",t),{success:!1,error:t instanceof Error?t.message:"Unknown image upload error"}}}async uploadMetadata(a){try{const t=await fetch("".concat(this.baseUrl,"/api/upload-metadata"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({metadata:a})});if(!t.ok)throw new Error("Metadata upload failed: ".concat(t.statusText));const e=await t.json();if(!e.success)throw new Error(e.error||"Metadata upload failed");return e}catch(t){return console.error("Metadata upload error:",t),{success:!1,error:t instanceof Error?t.message:"Unknown metadata upload error"}}}},n=(a,t,e,o)=>({name:a,description:t,image:e,attributes:o,external_url:window.location.origin,created_at:(new Date).toISOString()}),s=async()=>await r.isAvailable(),l=r.uploadImage.bind(r),c=r.uploadMetadata.bind(r),i=()=>({configured:!0})}}]);
//# sourceMappingURL=786.1db47b8c.chunk.js.map